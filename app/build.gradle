apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

buildscript {
    repositories {
        google()
        jcenter()
        flatDir{
            dirs 'libs'
        }
    }

    dependencies {
        classpath 'com.google.gms:google-services:4.3.3'
    }
}

project.ext {
    userCredential = getUserCredentials()
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "im.dlg.oem_test"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            resValue "string", "app_version_name", "${defaultConfig.versionName}"
            resValue "string", "app_version_code", "${defaultConfig.versionCode}"
            resValue "string", "app_version_full", "${defaultConfig.versionName}-${defaultConfig.versionCode}-debug"
            buildConfigField("String", "TEST_USER", "\"${userCredential.user}\"")
            buildConfigField("String", "TEST_PASSWORD", "\"${userCredential.password}\"")
        }

        release {
            resValue "string", "app_version_name", "${defaultConfig.versionName}"
            resValue "string", "app_version_code", "${defaultConfig.versionCode}"
            resValue "string", "app_version_full", "${defaultConfig.versionName}-${defaultConfig.versionCode}"
            buildConfigField("String", "TEST_USER", "\"${userCredential.user}\"")
            buildConfigField("String", "TEST_PASSWORD", "\"${userCredential.password}\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.aar","*.jar"])
    implementation("im.dlg:sdk:0+") {
        transitive = true
    }
//    implementation project(":sdk")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.10"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "com.google.android.material:material:1.2.1"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "io.reactivex.rxjava3:rxjava:3.0.4"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.0"
    implementation "io.grpc:grpc-okhttp:1.31.1"
    implementation "io.grpc:grpc-protobuf:1.31.1"
    implementation "io.grpc:grpc-stub:1.31.1"
    implementation "im.dlg:code:v1.65.0"
    implementation "com.google.firebase:firebase-messaging:20.2.4"

    implementation "com.goterl.lazycode:lazysodium-android:4.1.1@aar"
    implementation "net.java.dev.jna:jna:5.5.0@aar"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

def getUserCredentials() {
    def testUser = null
    def testPassword = null
    try {
        Properties properties = new Properties()
        project.rootProject.file('local.properties').newDataInputStream()?.withCloseable { file ->
            properties.load(file)
        }
        testUser = properties.getProperty('testUser') ?: 'user'
        testPassword = properties.getProperty('testPassword') ?: 'pass'
    } catch (Exception ignored) {
        println("Warning: local.properties loading failed #getUserCredentials")
    }
    return new TestUserCredential(user: testUser, password: testPassword)
}

class TestUserCredential {
    String user
    String password
}

apply plugin: 'com.google.gms.google-services'