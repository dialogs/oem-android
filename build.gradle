buildscript {
    ext.kotlin_version = '1.4.10'

    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'http://storage.googleapis.com/r8-releases/raw' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath 'com.android.tools:r8:2.1.67'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.10"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.adarshr:gradle-test-logger-plugin:1.7.0'
        classpath 'com.hiya:jacoco-android:0.2'
        classpath "io.freefair.gradle:github-plugin:5.2.1"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven { url "$rootDir/repo" }
        maven {
            url "https://external-nexus.dlg.im/nexus/repository/mvn-android/"

            Properties properties = new Properties()
            try {
                project.rootProject.file('local.properties').newDataInputStream().withCloseable { file ->
                    properties.load(file)
                }
            } catch (Exception ignored) { }

            credentials {
                username System.getenv('oemNexusUsernameRead') ?: properties.getProperty('oemNexusUsernameRead')
                password System.getenv('oemNexusPasswordRead') ?: properties.getProperty('oemNexusPasswordRead')
            }
        }
        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "http://dialog.bintray.com/maven" }
        maven {
            url "https://s3.amazonaws.com/repo.commonsware.com"
        }

        maven {
            url "https://dl.bintray.com/terl/lazysodium-maven"
        }
    }
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task clean(type: Delete) {
    delete rootProject.buildDir
}